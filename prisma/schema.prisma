generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


// ! ----- MODELS FOR USER ----- !

model User {
  id        String          @id @default(cuid())
  email     String          @unique
  fristName String
  lastName  String
  password  String
  token     sessionToken[]
  tickets   sessionTicket[]
}

model sessionToken {
  id       Int    @id @default(autoincrement())
  token    String @unique
  userData User   @relation(fields: [userId], references: [id])
  userId   String
}

// ! ----- MODELS FOR MOVIES ----- !


model Movies {
  id         Int             @id @unique @default(autoincrement())
  movieName  String          @unique
  decription String
  time       String
  price      String
  createdAt  String
  Tickets    sessionTicket[]
  cinemaData cinema?         @relation(fields: [cinemaID], references: [id])
  cinemaID   Int?
}

model row {
  id            Int           @unique @default(autoincrement())
  row           Int
  selectedSeats String
  tickets       sessionTicket @relation(fields: [ticket], references: [ticket])
  ticket        Int
}


// ! ----- MODELS FOR TICKETS ----- !

model sessionTicket {
  ticket     Int      @unique
  userData   User     @relation(fields: [email], references: [email])
  email      String
  movieData  Movies   @relation(fields: [movieId], references: [id])
  movieId    Int
  useTicket  Boolean  @default(false)
  rows       row[]
  cinemaData cinema   @relation(fields: [cinemaID], references: [id])
  cinemaID   Int
  hallData   Hall     @relation(fields: [hallID], references: [id])
  hallID     Int
  dateEvent  date     @relation(fields: [date], references: [date])
  date       DateTime
  dateTime   dateTime @relation(fields: [Time], references: [Time])
  Time       String
}

// ! ----- MODELS FOR CINEMA ----- !

model cinema {
  id         Int             @unique @default(autoincrement())
  cinemaName String
  address    String
  city       String
  province   String
  halls      Hall[]
  movies     Movies[]
  tickets    sessionTicket[]
  dates      date[]
}

model Hall {
  id          Int             @unique @default(autoincrement())
  hallName    String
  maximumRows Int
  cinemaData  cinema          @relation(fields: [cinemaID], references: [id])
  cinemaID    Int
  tickets     sessionTicket[]
}

model date {
  id         Int             @id @default(autoincrement())
  date       DateTime        @unique
  cinemaData cinema          @relation(fields: [cinemaID], references: [id])
  cinemaID   Int
  tickets    sessionTicket[]
  dateTimes  dateTime[]
}

model dateTime {
  id       Int             @id @default(autoincrement())
  Time     String          @unique
  dateData date            @relation(fields: [date], references: [date])
  date     DateTime
  tickets  sessionTicket[]
}
